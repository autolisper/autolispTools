(defun HL:projection (p a innerpoint / p0 p1 center0 r0 center1 r1 e eright eleft z0 z1 interpoints ansp1 ansp0 tp)
  (setq p0 (car p))
  (setq p1 (cdr p))
  (setq z0 (caddr p0))
  (setq z1 (caddr p1))  
  (if (> z0 z1)
      (progn
        (setq tp p0)
        (setq p0 p1)
        (setq p1 tp)
        (setq tp z0)
        (setq z0 z1)
        (setq z1 tp)
      )
  )
  (setq tana (tan (HL:deg2rad a)))
  ;center0
  (setq center0 (list (car p0) (cadr p0)))
  (setq center1 (list (car p1) (cadr p1)))
  (setq r0 (HL:getD center0 center1))
  (setq r1 (* (- z1 z0) tana))
  (setq interpoints (HL:getCircleIntersectPoints center0 r0 center1 r1))
  (setq left (car interpoints))
  (setq right (cdr interpoints))
  (setq e (HL:lengthV (HL:-L center1 center0) (* z0 tana)))
  (setq eright (HL:rotateright90 e))
  (setq eleft (HL:rotateleft90 e))
  (if (> 0.0 (HL:outerproduct (HL:-L center1 center0) (HL:-L innerpoint center0)))
      (progn
        (setq ansp0 (HL:+L center0 eright))
        (setq ansp1 (HL:+L right eright))
        (cons ansp0 ansp1)
      )
      (progn
        (setq ansp0 (HL:+L center0 eleft))
        (setq ansp1 (HL:+L left eleft))
        (cons ansp0 ansp1)
      )
  )  
)
(defun HL:getObjectPoints (o / otype ans)  
  (list (vlax-curve-getstartpoint o) (vlax-curve-getendpoint o))
)
(defun HL:_taperprojectionObject (object innerpoint a zoffset / points pointpairs)
  (setq zoffset (list 0.0 0.0 zoffset))
  (setq points (HL:getObjectPoints object))  
  ;zoffset 
  (setq points (mapcar '(lambda (p) (HL:-L p zoffset)) points))
  (setq pointpairs (HL:makepair points))  
  ;change points to projection point
  (setq pointpairs (mapcar '(lambda (p) (HL:projection p a innerpoint)) pointpairs))
  ;draw lines
  (mapcar '(lambda (pair) (HL:drawLine (car pair) (cdr pair))) pointpairs)
)
(defun c:taperprojection ( / objects a zoffset object points pointpairs innerpoint)
  (if (not HL:ISLOADUTILITY_LSP)
    (progn 
      (alert "you must load utility.lsp\n")
      (quit)
    )
  )  
  (HL:A_start)
  ;get Objects
  (while (not objects)
    (setq objects (ssget "LINEOBJECTS:"))
  )  
  (setq objects (HL:getNameList objects))
  (while (not innerpoint)
    (setq innerpoint (getpoint "innerpoint:"))
  )
  (while (not a)
    (setq a (getangle "angle:"))
  )
  ;get zoffset
  (while (not zoffset)
    (setq zoffset (getreal "zoffset:"))
  )
  ;for objects
  (foreach object objects
    ;get points from object
    (setq points (HL:getObjectPoints object))
    ;zoffset 
    (setq points (mapcar '(lambda (p) (HL:-L p zoffset))))
    (setq pointpairs (HL:makepair pointpairs))
    ;change points to projection point and drawLines
    (HL:_taperprojectionObject (object innerpoint a zoffset))
  )          
  (HL:A_end)
)